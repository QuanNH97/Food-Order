<style>
  .bubble {
    position: fixed;
    right: 30px;
    bottom: 30px;
  }
</style>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.css" rel="stylesheet">

<link href="https://cdnjs.cloudflare.com/ajax/libs/clockpicker/0.0.7/bootstrap-clockpicker.css" rel="stylesheet">
<div class="container">
  <div class="row">
    <div class="col-4">
      <div class="row"></div>
    </div>
  </div>
</div>
<hr>
<h2 class="text-center">LIST OF FOODS</h2>
<hr>
<div class="container" id="app">
  <div class="row text-center">
    <!--each restaurant-->
    <%# @restaurants.each do |restaurant| %>
    <div class="col-md-4 pb-1 pb-md-0" style="margin-bottom: 20px;" v-for="(item,index) in foods">
      <div class="card">
        <img class="card-img-top" :src="item.image.url == null ? item.net_image : item.image.url " alt="Card image cap" style="width: 338px; height: 225px">
        <div class="card-body">
          <h5 class="card-title">{{item.name}} <span>₫{{item.default_price}}</span></h5>
          <p class="card-text">Rate : {{item.average_star}} <span class="fa fa-star"></span></p>
          <!--<a href="/EON51" class="btn btn-primary">Choose</a>-->
          <div class="row">
            <div class="offset-md-4 col-md-2">
              <button class="btn btn-success" @click="addToCart(index)" v-if="!selectingFoods.includes(index)">Select</button>
              <button class="btn btn-warning" @click="deleteFromCart(index)" v-if="selectingFoods.includes(index)">Undo
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%# end %>
    <!--each restaurant-->

    <div class="bubble" id="cart-corner">
      <button class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
        <i class="fas fa-cart-arrow-down"></i> ({{this.count}})
      </button>
    </div>
  </div>
  <!-- Modal show restaurant-->
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Order </h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label for="">Time start</label>
                <div class="input-group clockpicker">
                <div class="col-xs-1">
                  <input type="text" class="form-control" v-model="order.start" id="start" disabled>
                </div>
                  <div class="input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group">
                <label for="">Time end</label>
                <div class="input-group clockpicker">
                <div class="col-xs-1">
                  <input type="text" class="form-control" v-model="order.end" id="end" disabled>
                </div>
                  <div class="input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <table class="table">
            <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Name</th>
              <th scope="col">Amount</th>
              <th scope="col">Money</th>
              <th scope="col">Manipulation</th>
            </tr>
            </thead>
            <tbody>
            <template v-if="selectingFoodIds.length >0">


              <tr v-for="(foodId,index) in selectingFoodIds">
                <th scope="row">{{index+1}}</th>
                <td>{{foods[index].name}}</td>
                <td>
                  <input v-model="amount[index]" class="form-control" type="number">
                </td>
                <td>
                  {{foods[index].default_price * amount[index]}}
                </td>
                <td>
                  <button class="btn btn-danger" @click="deleteFromCart(index)"><i class="fas fa-ban"></i></button>
                </td>
              </tr>
            </template>
            </tbody>
          </table>
          <button class="btn btn-outline-success" v-if="count>0" @click="submitFoods">Submit</button>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <!--          <button type="button" class="btn btn-primary">Submit</button>-->
        </div>
      </div>
    </div>
  </div>
  <!-- Modal showing menu-->
  <!-- Modal -->
  <div class="modal fade" id="menu" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Các món ăn có trong nhà hàng</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <table class="table">
            <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Name</th>
              <th scope="col">Cost</th>
              <th scope="col">Star</th>
            </tr>
            </thead>
            <tbody>

            </tbody>
          </table>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-primary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/clockpicker/0.0.7/bootstrap-clockpicker.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.clockpicker').clockpicker();
    });
</script>
<script>
    var app = new Vue({
        el: '#app',
        data: {
            code: '<%= code %>',
            restaurants: '',
            foods: [],
            choosingRestaurantIds: [],
            selectingFoods: [],
            order: [],
            amount: [],
        },
        methods: {
            getListOfRestaurant: function () {
                let code = this.code;
                axios.get('/order/api/' + code, {}).then(function (res) {
                    app.order = res.data.order;
                    app.restaurants = res.data.restaurants;
                }).catch(function (err) {
                    console.log(err.data);
                })
            },
            getListOfFoods: function (restaurantIds) {
                let code = this.code;
                axios.post('/order/api/foods/' + code, {
                    restaurantIds: restaurantIds
                }).then(function (res) {
                    app.foods = res.data.foods;
                    for (let i = 0; i < app.foods.length; i++) {
                        app.amount.push(0);
                    }
                }).catch(function (err) {
                    console.log(err.data);
                });
            },
            addToCart: function (index) {
                if (!this.selectingFoods.includes(index)) {
                    this.selectingFoods.push(index);
                }
                this.amount[index] += 1;
            },
            deleteFromCart: function (index) {
                this.selectingFoods = this.selectingFoods.filter(value => value != index);
                this.amount[index] = 0;
            },
            submitFoods: function () {
                let code = this.order.code;
                let amount = [];
                let money = [];
                for (let i = 0; i < this.selectingFoods.length; i++) {
                    amount.push(this.amount[this.selectingFoods[i]]);
                    money.push(this.foods[this.selectingFoods[i]].default_price);
                }
                ids = this.selectingFoodIds;

                axios.post('/order/' + code + '/foods/store', {
                    amount: amount,
                    ids: ids,
                    money: money
                }).then(function (res) {
                    $('#exampleModal').modal('hide');
                    alert("Successful");
                }).catch(function (err) {
                    console.log(err);
                })
            }
        },
        computed: {
            selectingFoodIds: function () {
                return this.selectingFoods.map(item => this.foods[item].id)
            },
            count: function () {
                return this.selectingFoods.length;
            }
        },
        watch: {
            restaurants: function () {
                let restaurantIds = this.restaurants.map(item => item.id);
                this.getListOfFoods(restaurantIds);
            }
        },
        mounted: function () {
            this.getListOfRestaurant();
        }
    });
    // var cart = new Vue({
    //     el: '#cart-corner',
    //     data: {
    //         amount: 0,
    //     }
    // });
</script>
